---
name: Verify Code
# This workflow contains every verification that is performed on the code base within the project scope.
# This includes static code analysis, unit tests, integration tests and licence checks.
on:
  workflow_call:

permissions:
  contents: read    # This is required for actions/checkout
  actions: read     # This is required by dorny/test-reporter
  checks: write     # This is required by dorny/test-reporter

jobs:
   detect-changes:
    runs-on: ubuntu-latest
    outputs:
      go: ${{ steps.filter.outputs.go }}
      lint: ${{ steps.filter.outputs.lint }}
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            go:
              - '**/*.go'
            lint:
              - '**/*.go'
              - '.golangci.yml'
   static-code-analysis:
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: golangci-lint
        if: ${{ needs.detect-changes.outputs.lint == 'true' }}
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0
          github-token: ${{ secrets.GITHUB_TOKEN }}
          only-new-issues: true

    

   unit-tests:
    runs-on: ubuntu-latest
    needs: detect-changes
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
    
      - name: Make unit test
        if: ${{ needs.detect-changes.outputs.go == 'true' || needs.detect-changes.outputs.proto == 'true' }}
        run: make test/ci

      - name: Ensure fallback report
        if: ${{ needs.detect-changes.outputs.go != 'true' && needs.detect-changes.outputs.proto != 'true' }}
        run: |
          mkdir -p build/reports
          echo '<?xml version="1.0" encoding="UTF-8"?><testsuites></testsuites>' > build/reports/test-unit.xml

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit Test Results
          path: ./build/reports/test-**.xml
          reporter: java-junit
          fail-on-error: 'true'
    
      - name: Upload Unit Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-reports
          path: ./build/reports/**

   validate-licences:
    runs-on: ubuntu-latest
    name: Validate Licences
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Setup Copywrite
        uses: hashicorp/setup-copywrite@v1.1.3
        with:
          version: v0.16.4

      - name: Check Header Compliance
        run: copywrite headers --plan

   code-validation-passed:
    name: Passed
    runs-on: ubuntu-latest
    needs:
      - static-code-analysis
      - unit-tests
      - validate-licences
    steps:
      - run: echo "# Code Validation has passed" >> "${GITHUB_STEP_SUMMARY}"